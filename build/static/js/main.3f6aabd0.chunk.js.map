{"version":3,"sources":["services/person.js","App.js","index.js"],"names":["baseUrl","exports","getPersons","axios","get","then","res","data","createPerson","person","post","p","deletePerson","id","delete","updatePerson","newObj","patch","Notification","message","style","color","padding","backgroundColor","borderStyle","borderRadius","App","useState","persons","setPersons","newName","setNewName","newPhone","setNewPhone","newSearch","setNewSearch","setMessage","useEffect","personServices","namesToShow","filter","name","toLowerCase","startsWith","displayMessage","setTimeout","handleDelete","e","Number","target","window","confirm","catch","err","value","onChange","onSubmit","preventDefault","old_person","find","number","new_persons","map","concat","type","i","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f6aabd0.chunk.js","sourcesContent":["import axios from 'axios';\nconst baseUrl = '/api/persons'\n\nconst getPersons = () => {\n    return axios\n    .get(baseUrl)\n    .then(res => res.data)\n}\n\nconst createPerson = person => {\n    return axios\n    .post(baseUrl, person)\n    .then(p => p.data)\n}\n\nconst deletePerson = id => {\n    return axios\n    .delete(`${baseUrl}/${id}`)\n}\n\nconst updatePerson = (id, newObj) => {\n    return axios\n    .patch(`${baseUrl}/${id}`, newObj)\n}\nconst exports = {getPersons, createPerson, deletePerson, updatePerson,}\n\nexport default exports;","import React, { useState, useEffect } from 'react'\nimport personServices from './services/person'\n\n\nconst Notification = ({message}) => {\n  if (message === '' || !message) {\n    return null;\n  } \n  const styles = {\n    color: 'green',\n    padding: '20px',\n    backgroundColor: 'lightgrey',\n    borderStyle: 'solid',\n    borderRadius: '5px',\n\n  }\n  return (\n    <h1 style={styles}>\n      {message}\n    </h1>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newPhone, setNewPhone ] = useState('')\n  const [ newSearch, setNewSearch ] = useState('')\n  const [ message, setMessage ] = useState('')\n\n  useEffect(() => {\n    personServices.getPersons()\n    .then(persons => {\n      setPersons(persons)\n    })\n  }, [])\n  const namesToShow = newSearch ? persons.filter(person => person.name.toLowerCase().startsWith(newSearch.toLowerCase())) : persons\n  const handleNameInput = (e) => {\n    setNewName(e.target.value);\n  }\n\n  const handlePhoneInput = (e) => {\n    setNewPhone(e.target.value);\n  }\n\n  const handleSearchInput = (e) => {\n    setNewSearch(e.target.value);\n  }\n\n  const displayMessage = (message) => {\n    setMessage(message)\n    setTimeout(() => {\n      setMessage('')\n    }, 5000)\n  }\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    const old_person = persons.find(person => person.name === newName )\n    \n    if (old_person) {\n      if (window.confirm(`Person: ${newName} is already in the phonebook. Would you like to update?`)) \n      {\n        personServices.updatePerson(old_person.id, {number: newPhone})\n        .then(res => {\n          setNewName('')\n          setNewPhone('')\n          const new_persons = persons.map(p => {\n            if (p.id === old_person.id) {\n              return res.data\n            }\n            return p\n          })\n          setPersons(new_persons)\n          displayMessage(`${newName}'s phone number updated to: ${newPhone}.`)\n          \n        })\n        .catch(err => {\n          displayMessage(`Information of ${newName} has been removed from the server.`)\n          setPersons(persons.filter(p => p.id !== old_person.id && p.name !== old_person.name))\n        })\n           \n      }\n      \n    } else {\n      personServices.createPerson({name: newName, number: newPhone})\n      .then(person => {\n        setPersons(persons.concat(person));  \n        displayMessage(`${newName} : ${newPhone} added to the phonebook.`)\n    })\n      setNewName('')\n      setNewPhone('')\n    }\n  }\n\n  const handleDelete = (e) => {\n    const name = persons.filter(p => p.id === Number(e.target.id))[0].name;\n    if (window.confirm(`Delete ${name}?`)) {\n        personServices.deletePerson(e.target.id)\n        .then(res => {\n          setPersons(persons.filter(p => p.id !== Number(e.target.id)))\n        })\n        .catch(err => {\n          setPersons(persons.filter(p => p.id !== Number(e.target.id)))\n        })\n    }\n  }\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <div>\n        filter shown with <input value={newSearch} onChange={handleSearchInput} /> \n      </div>\n      <form onSubmit={handleFormSubmit}>\n        <h1>add a new</h1>\n        <div>\n          name: <input value={newName} onChange={handleNameInput} />\n        </div>\n        <div>\n          number: <input value={newPhone} onChange={handlePhoneInput} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n      {namesToShow.map((person, i) => \n        <div key={i}>{person.name} {person.number} <button id={person.id} onClick={handleDelete}>delete</button></div>\n      )}\n      \n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}